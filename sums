#!/usr/bin/env bash
#--------------------------------------------------------------------
function debug_msg
{
    if [[ $debugging != 0 ]]; then
        echo $* >&2
    fi
}

#--------------------------------------------------------------------
function print_help
{
    command=$(basename $0)
    cat >&2 <<EOF
syntax: $command -t terms -m max-sum

        -m specifies the maximum sum (inclusive)
        -t specifies the number of terms

        for example:

        $command -t 3 -m 25
EOF
}


#--------------------------------------------------------------------
# MAIN
#--------------------------------------------------------------------
debugging=0
max_sum=0
num_terms=0

if [[ $# == 0 ]]; then
    print_help
    exit 0
fi

# parse command-line options
while getopts "dm:t:" option; do
    case $option in
        d)
            debugging=1
            debug_msg \$debugging=$debugging
            ;;
        m)
            max_sum=$OPTARG
            debug_msg \$max_sum=$max_sum
            ;;
        t)
            num_terms=$OPTARG
            debug_msg \$num_terms=$num_terms
            ;;
    esac
done

#--------------------------------------------------------------------
TMPFILE=$(mktemp)
truncate -s 0 $TMPFILE

# array of terms
declare -A terms

# accumulator
declare -i accum=0

for (( i=1; i <= $num_terms; i++ )); do
    declare -i this_term=$(( $RANDOM % 10 ))
    debug_msg \$this_term=$this_term
    echo $this_term >> $TMPFILE

    terms[$i]=$this_term
    accum=$(( accum + $this_term ))
done

debug_msg \$accum=$accum
echo $accum >> $TMPFILE

if (( $accum <= $max_sum )); then
    cat $TMPFILE
fi

rm -f $TMPFILE

#--------------------------------------------------------------------
# vim: sw=4 ts=4 et
